[{"D:\\Coding\\Fantasy Hockey Website FINAL FINAL\\fantasy-hockey-helper\\src\\reportWebVitals.js":"1","D:\\Coding\\fantasy-hockey-website\\src\\index.js":"2","D:\\Coding\\fantasy-hockey-website\\src\\App.js":"3","D:\\Coding\\fantasy-hockey-website\\src\\reportWebVitals.js":"4","D:\\Coding\\fantasy-hockey-website\\src\\pages\\LineupMachine.js":"5","D:\\Coding\\fantasy-hockey-website\\src\\pages\\PlayerStats.js":"6","D:\\Coding\\fantasy-hockey-website\\src\\helpers\\helpers.js":"7","D:\\Coding\\fantasy-hockey-website\\src\\pages\\PlayerPickup.js":"8"},{"size":362,"mtime":1606868986620,"results":"9","hashOfConfig":"10"},{"size":517,"mtime":1612215275196,"results":"11","hashOfConfig":"12"},{"size":2740,"mtime":1612900202473,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612215275196,"results":"14","hashOfConfig":"12"},{"size":218,"mtime":1612226506698,"results":"15","hashOfConfig":"12"},{"size":11479,"mtime":1612899291813,"results":"16","hashOfConfig":"12"},{"size":485,"mtime":1612228950168,"results":"17","hashOfConfig":"12"},{"size":11514,"mtime":1612900181354,"results":"18","hashOfConfig":"12"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7qwihn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yhnmyv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding\\Fantasy Hockey Website FINAL FINAL\\fantasy-hockey-helper\\src\\reportWebVitals.js",[],"D:\\Coding\\fantasy-hockey-website\\src\\index.js",[],"D:\\Coding\\fantasy-hockey-website\\src\\App.js",[],"D:\\Coding\\fantasy-hockey-website\\src\\reportWebVitals.js",[],"D:\\Coding\\fantasy-hockey-website\\src\\pages\\LineupMachine.js",[],"D:\\Coding\\fantasy-hockey-website\\src\\pages\\PlayerStats.js",["36"],"import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n  marginBottom: {\r\n    marginBottom: '100px',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  formControl: {\r\n    minWidth: 180,\r\n    marginLeft: '24px',\r\n  },\r\n});\r\n\r\n// to get player ID -> GET https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster\r\n\r\nfunction PlayerStatsComponent() {\r\n  const classes = useStyles();\r\n  const [players] = useState([\r\n    { name: 'Alex Ovechkin', id: '8471214' },\r\n    { name: 'Mika Zibanejad', id: '8476459' },\r\n    { name: 'Jonathan Huberdeau', id: '8476456' },\r\n    { name: 'Jake Guentzel', id: '8477404' },\r\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\r\n    { name: 'J.T. Miller', id: '8476468' },\r\n    { name: 'Filip Forsberg', id: '8476887' },\r\n    { name: 'Brady Tkachuk', id: '8480801' },\r\n    { name: 'Max Domi', id: '8477503' },\r\n    { name: 'Chris Kreider', id: '8475184' },\r\n  ]);\r\n  const [defensePlayers] = useState([\r\n    { name: 'Brent Burns', id: '8470613' },\r\n    { name: 'Ryan Pulock', id: '8477506' },\r\n    { name: 'Mark Giordano', id: '8470966' },\r\n    { name: 'Quinn Hughes', id: '8480800' },\r\n    { name: 'Adam Fox', id: '8479323' },\r\n    { name: 'Rasmus Ristolainen', id: '8477499' },\r\n  ]);\r\n  const [rows, setRows] = useState([]);\r\n  const [defenseRows, setDefenseRows] = useState([]);\r\n  const [games, setGames] = useState(1);\r\n\r\n  function createData(name, games, goals, assists, plusMinus, points) {\r\n    return { name, games, goals, assists, plusMinus, points };\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (games === 1) {\r\n      getPlayerStats();\r\n      getDefensePlayerStats();\r\n    } else if (games === 4) {\r\n      getSelectedPlayerStats(4);\r\n      getSelectedDefensePlayerStats(4);\r\n    } else if (games === 5) {\r\n      getSelectedPlayerStats(5);\r\n      getSelectedDefensePlayerStats(5);\r\n    }\r\n  }, [games]);\r\n\r\n  const getSelectedPlayerStats = async (games) => {\r\n    setRows([]);\r\n    const promises = [];\r\n\r\n    const getData = async (x) => {\r\n      const res = axios.get(\r\n        `https://statsapi.web.nhl.com/api/v1/people/${x}/stats?stats=gameLog`\r\n      );\r\n      return res;\r\n    };\r\n\r\n    players.forEach((element) => {\r\n      promises.push(getData(element.id));\r\n    });\r\n\r\n    await Promise.all(promises).then((results) => {\r\n      results.map((item, i) => {\r\n        const stats = {\r\n          games: games,\r\n          goals: 0,\r\n          assists: 0,\r\n          plusMinus: 0,\r\n          points: 0,\r\n        };\r\n\r\n        let selectedGames = item.data.stats[0].splits.splice(0, games);\r\n        selectedGames.forEach((game) => {\r\n          stats.goals += game.stat.goals;\r\n          stats.assists += game.stat.assists;\r\n          stats.plusMinus += game.stat.plusMinus;\r\n          stats.points += game.stat.points;\r\n        });\r\n\r\n        setRows((rows) => [\r\n          ...rows,\r\n          {\r\n            name: players[i].name,\r\n            games: stats.games,\r\n            goals: stats.goals,\r\n            assists: stats.assists,\r\n            plusMinus: stats.plusMinus,\r\n            points: stats.points,\r\n          },\r\n        ]);\r\n        return null;\r\n      });\r\n    });\r\n  };\r\n\r\n  const getSelectedDefensePlayerStats = async (games) => {\r\n    setDefenseRows([]);\r\n    const promises = [];\r\n\r\n    const getData = async (x) => {\r\n      const res = axios.get(\r\n        `https://statsapi.web.nhl.com/api/v1/people/${x}/stats?stats=gameLog`\r\n      );\r\n      return res;\r\n    };\r\n\r\n    defensePlayers.forEach((element) => {\r\n      promises.push(getData(element.id));\r\n    });\r\n\r\n    await Promise.all(promises).then((results) => {\r\n      results.map((item, i) => {\r\n        const stats = {\r\n          games: games,\r\n          goals: 0,\r\n          assists: 0,\r\n          plusMinus: 0,\r\n          points: 0,\r\n        };\r\n\r\n        let selectedGames = item.data.stats[0].splits.splice(0, games);\r\n        selectedGames.forEach((game) => {\r\n          stats.goals += game.stat.goals;\r\n          stats.assists += game.stat.assists;\r\n          stats.plusMinus += game.stat.plusMinus;\r\n          stats.points += game.stat.points;\r\n        });\r\n\r\n        setDefenseRows((rows) => [\r\n          ...rows,\r\n          {\r\n            name: defensePlayers[i].name,\r\n            games: stats.games,\r\n            goals: stats.goals,\r\n            assists: stats.assists,\r\n            plusMinus: stats.plusMinus,\r\n            points: stats.points,\r\n          },\r\n        ]);\r\n        return null;\r\n      });\r\n    });\r\n  };\r\n\r\n  const getPlayerStats = async () => {\r\n    setRows([]);\r\n    const promises = [];\r\n\r\n    const getData = async (x) => {\r\n      const res = axios.get(\r\n        `https://statsapi.web.nhl.com/api/v1/people/${x}/stats?stats=statsSingleSeason&season=20202021`\r\n      );\r\n      return res;\r\n    };\r\n\r\n    players.forEach((element) => {\r\n      promises.push(getData(element.id));\r\n    });\r\n\r\n    await Promise.all(promises).then((results) => {\r\n      results.map((item, i) => {\r\n        setRows((rows) => [\r\n          ...rows,\r\n          createData(\r\n            players[i].name,\r\n            item.data.stats[0].splits[0].stat.games,\r\n            item.data.stats[0].splits[0].stat.goals,\r\n            item.data.stats[0].splits[0].stat.assists,\r\n            item.data.stats[0].splits[0].stat.plusMinus,\r\n            item.data.stats[0].splits[0].stat.points\r\n          ),\r\n        ]);\r\n        return null;\r\n      });\r\n    });\r\n  };\r\n\r\n  const getDefensePlayerStats = async () => {\r\n    setDefenseRows([]);\r\n    const promises = [];\r\n\r\n    const getData = async (x) => {\r\n      const res = axios.get(\r\n        `https://statsapi.web.nhl.com/api/v1/people/${x}/stats?stats=statsSingleSeason&season=20202021`\r\n      );\r\n      return res;\r\n    };\r\n\r\n    defensePlayers.forEach((element) => {\r\n      promises.push(getData(element.id));\r\n    });\r\n\r\n    await Promise.all(promises).then((results) => {\r\n      results.map((item, i) => {\r\n        setDefenseRows((rows) => [\r\n          ...rows,\r\n          createData(\r\n            defensePlayers[i].name,\r\n            item.data.stats[0].splits[0].stat.games,\r\n            item.data.stats[0].splits[0].stat.goals,\r\n            item.data.stats[0].splits[0].stat.assists,\r\n            item.data.stats[0].splits[0].stat.plusMinus,\r\n            item.data.stats[0].splits[0].stat.points\r\n          ),\r\n        ]);\r\n        return null;\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    let value = event.target.value;\r\n    setGames(value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.header}>\r\n        <h1>player stats</h1>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"demo-simple-select-label\">Games Selected</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={games}\r\n            onChange={handleChange}\r\n          >\r\n            <MenuItem value={1}>All</MenuItem>\r\n            <MenuItem value={4}>Past Four</MenuItem>\r\n            <MenuItem value={5}>Past Five</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className={classes.marginBottom}>\r\n        <h2>Offense Players</h2>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"left\">Games Played</TableCell>\r\n                <TableCell align=\"left\">Goals</TableCell>\r\n                <TableCell align=\"left\">Assists</TableCell>\r\n                <TableCell align=\"left\">Plus Minus</TableCell>\r\n\r\n                <TableCell align=\"left\">Points</TableCell>\r\n                <TableCell align=\"left\">Fantasy Points</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .sort(function (a, b) {\r\n                  return (\r\n                    b.goals * 2 +\r\n                    b.assists +\r\n                    b.plusMinus * 0.5 -\r\n                    (a.goals * 2 + a.assists + a.plusMinus * 0.5)\r\n                  );\r\n                })\r\n                .map((row, i) => (\r\n                  <TableRow key={i}>\r\n                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                    <TableCell align=\"center\">{row.games}</TableCell>\r\n                    <TableCell align=\"center\">{row.goals}</TableCell>\r\n                    <TableCell align=\"center\">{row.assists}</TableCell>\r\n                    <TableCell align=\"center\">{row.plusMinus}</TableCell>\r\n                    <TableCell align=\"center\">{row.points}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.goals * 2 + row.assists + row.plusMinus * 0.5}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <br />\r\n        <h2>Defense Players</h2>\r\n        <TableContainer component={Paper}>\r\n          <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"left\">Games Played</TableCell>\r\n                <TableCell align=\"left\">Goals</TableCell>\r\n                <TableCell align=\"left\">Assists</TableCell>\r\n                <TableCell align=\"left\">Plus Minus</TableCell>\r\n\r\n                <TableCell align=\"left\">Points</TableCell>\r\n                <TableCell align=\"left\">Fantasy Points</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {defenseRows\r\n                .sort(function (a, b) {\r\n                  return (\r\n                    b.goals * 2 +\r\n                    b.assists +\r\n                    b.plusMinus * 0.5 -\r\n                    (a.goals * 2 + a.assists + a.plusMinus * 0.5)\r\n                  );\r\n                })\r\n                .map((row, i) => (\r\n                  <TableRow key={i}>\r\n                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                    <TableCell align=\"center\">{row.games}</TableCell>\r\n                    <TableCell align=\"center\">{row.goals}</TableCell>\r\n                    <TableCell align=\"center\">{row.assists}</TableCell>\r\n                    <TableCell align=\"center\">{row.plusMinus}</TableCell>\r\n                    <TableCell align=\"center\">{row.points}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.goals * 2 + row.assists + row.plusMinus * 0.5}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default PlayerStatsComponent;\r\n","D:\\Coding\\fantasy-hockey-website\\src\\helpers\\helpers.js",[],"D:\\Coding\\fantasy-hockey-website\\src\\pages\\PlayerPickup.js",[],{"ruleId":"37","severity":1,"message":"38","line":79,"column":6,"nodeType":"39","endLine":79,"endColumn":13,"suggestions":"40"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getDefensePlayerStats', 'getPlayerStats', 'getSelectedDefensePlayerStats', and 'getSelectedPlayerStats'. Either include them or remove the dependency array.","ArrayExpression",["41"],{"desc":"42","fix":"43"},"Update the dependencies array to be: [games, getDefensePlayerStats, getPlayerStats, getSelectedDefensePlayerStats, getSelectedPlayerStats]",{"range":"44","text":"45"},[2486,2493],"[games, getDefensePlayerStats, getPlayerStats, getSelectedDefensePlayerStats, getSelectedPlayerStats]"]