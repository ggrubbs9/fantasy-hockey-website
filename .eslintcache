[{"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/index.js":"1","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/App.js":"2","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/reportWebVitals.js":"3","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/store.js":"4","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/LineupMachine.js":"5","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerStats.js":"6","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerPickup.js":"7","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/TeamSetup.js":"8","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/rootReducer.js":"9","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/formDialog.js":"10","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.actions.js":"11","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.reducer.js":"12","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.types.js":"13","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/scheduleGrid.js":"14","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/utils/firebase.js":"15","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/signInDialog.js":"16"},{"size":1186,"mtime":1635482981761,"results":"17","hashOfConfig":"18"},{"size":3349,"mtime":1635475998117,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1635472672767,"results":"20","hashOfConfig":"18"},{"size":229,"mtime":1635472672769,"results":"21","hashOfConfig":"18"},{"size":1213,"mtime":1635472672766,"results":"22","hashOfConfig":"18"},{"size":11153,"mtime":1635472672766,"results":"23","hashOfConfig":"18"},{"size":11155,"mtime":1635472672766,"results":"24","hashOfConfig":"18"},{"size":3937,"mtime":1635472672767,"results":"25","hashOfConfig":"18"},{"size":196,"mtime":1635472672769,"results":"26","hashOfConfig":"18"},{"size":1723,"mtime":1635473865041,"results":"27","hashOfConfig":"18"},{"size":216,"mtime":1635472672768,"results":"28","hashOfConfig":"18"},{"size":430,"mtime":1635472672768,"results":"29","hashOfConfig":"18"},{"size":76,"mtime":1635472672768,"results":"30","hashOfConfig":"18"},{"size":1640,"mtime":1635472672764,"results":"31","hashOfConfig":"18"},{"size":1025,"mtime":1635475029876,"results":"32","hashOfConfig":"18"},{"size":4398,"mtime":1635482871577,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rxq89i",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"39"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/index.js",["71"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/App.js",["72"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core';\nimport BuildIcon from '@material-ui/icons/Build';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport PeopleIcon from '@material-ui/icons/People';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport LineupMachineComponent from './pages/LineupMachine';\nimport PlayerStatsComponent from './pages/PlayerStats';\nimport PlayerPickupComponent from './pages/PlayerPickup';\nimport TeamSetupComponent from './pages/TeamSetup';\nimport Button from '@mui/material/Button';\nimport SignInDialog from './components/signInDialog';\n// import firebase from \"firebase\";\n\nconst useStyles = makeStyles({\n  stickToBottom: {\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    backgroundColor: 'lightgrey',\n  },\n});\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n  const classes = useStyles();\n\n  function Dashboard() {\n    return <h2>Users</h2>;\n  }\n\n  const handleClick = (e) => {\n    console.log(e);\n  };\n\n  const dialogCallback = (childData) => {\n    console.log(childData);\n  };\n\n  return (\n    <Router>\n      <div>\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <LineupMachineComponent />\n          </Route>\n          <Route path=\"/player-stats\">\n            <PlayerStatsComponent />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n          <Route path=\"/player-pickup\">\n            <PlayerPickupComponent />\n          </Route>\n          <Route path=\"/team-setup\">\n            <TeamSetupComponent />\n          </Route>\n        </Switch>\n\n        <BottomNavigation\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          showLabels\n          className={classes.stickToBottom}\n        >\n          <BottomNavigationAction\n            component={Link}\n            to=\"/\"\n            label=\"Lineup Machine\"\n            icon={<BuildIcon />}\n          />\n          <BottomNavigationAction\n            component={Link}\n            to=\"/player-stats\"\n            label=\"Player Stats\"\n            icon={<TrendingUpIcon />}\n          />\n          <BottomNavigationAction\n            component={Link}\n            to=\"/dashboard\"\n            label=\"Team Stats\"\n            icon={<PeopleIcon />}\n          />\n          <BottomNavigationAction\n            component={Link}\n            to=\"/player-pickup\"\n            label=\"Player Pickup\"\n            icon={<CachedIcon />}\n          />\n          <BottomNavigationAction\n            component={Link}\n            to=\"/team-setup\"\n            label=\"Team Setup\"\n            icon={<CachedIcon />}\n          />\n          <SignInDialog\n            parentCallback={dialogCallback}\n            handleClickOpen={handleClick}\n          />\n        </BottomNavigation>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["73","74"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/reportWebVitals.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/store.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/LineupMachine.js",["75","76","77","78"],"import { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport ScheduleGridComponent from '../components/scheduleGrid.js';\n\nfunction LineupMachineComponent() {\n  const [players] = useState([\n    { name: 'Alex Ovechkin', id: '8471214' },\n    { name: 'Mika Zibanejad', id: '8476459' },\n    { name: 'Jonathan Huberdeau', id: '8476456' },\n    { name: 'Jake Guentzel', id: '8477404' },\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\n    { name: 'J.T. Miller', id: '8476468' },\n    { name: 'Filip Forsberg', id: '8476887' },\n    { name: 'Brady Tkachuk', id: '8480801' },\n    { name: 'Max Domi', id: '8477503' },\n    { name: 'Chris Kreider', id: '8475184' },\n  ]);\n  const [defensePlayers] = useState([\n    { name: 'Brent Burns', id: '8470613' },\n    { name: 'Ryan Pulock', id: '8477506' },\n    { name: 'Mark Giordano', id: '8470966' },\n    { name: 'Quinn Hughes', id: '8480800' },\n    { name: 'Adam Fox', id: '8479323' },\n    { name: 'Rasmus Ristolainen', id: '8477499' },\n  ]);\n  return (\n    <Container maxWidth=\"xl\">\n      <h1>hi</h1>\n      <ScheduleGridComponent />\n    </Container>\n  );\n}\n\nexport default LineupMachineComponent;\n","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerStats.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerPickup.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/TeamSetup.js",["79","80"],"import { Container } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {\n  TableBody,\n  TableCell,\n  TableRow,\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FormDialog from '../components/formDialog';\nimport { connect } from 'react-redux';\n\nimport {\n  increaseCounter,\n  decreaseCounter,\n} from '../store/Counter/counter.actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    count: state.counter.count,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increaseCounter: () => dispatch(increaseCounter()),\n\n    decreaseCounter: () => dispatch(decreaseCounter()),\n  };\n};\n\nfunction TeamSetupComponent(props) {\n  const count = [\n    { name: 'Alex Ovechkin', id: '8471214' },\n    { name: 'Mika Zibanejad', id: '8476459' },\n    { name: 'Jonathan Huberdeau', id: '8476456' },\n    { name: 'Jake Guentzel', id: '8477404' },\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\n    { name: 'J.T. Miller', id: '8476468' },\n    { name: 'Filip Forsberg', id: '8476887' },\n    { name: 'Brady Tkachuk', id: '8480801' },\n    { name: 'Max Domi', id: '8477503' },\n    { name: 'Chris Kreider', id: '8475184' },\n\n    { name: 'Brent Burns', id: '8470613' },\n    { name: 'Ryan Pulock', id: '8477506' },\n    { name: 'Mark Giordano', id: '8470966' },\n    { name: 'Quinn Hughes', id: '8480800' },\n    { name: 'Adam Fox', id: '8479323' },\n    { name: 'Rasmus Ristolainen', id: '8477499' },\n  ];\n\n  const [playerID, setPlayerID] = useState([]);\n\n  const searchPlayerID = async (player) => {\n    const promises = [];\n\n    const getData = () => {\n      const res = axios.get(\n        `https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster`\n      );\n      return res;\n    };\n\n    promises.push(getData());\n\n    await Promise.all(promises).then((results) => {\n      const teams = results[0].data.teams;\n\n      teams.forEach((team) => {\n        const roster = team.roster.roster;\n        roster.forEach((rosterPlayer) => {\n          if (rosterPlayer.person.fullName === player) {\n            console.log(rosterPlayer);\n            setPlayerID(rosterPlayer.person.id);\n          }\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n    searchPlayerID('Patrick Kane');\n  }, []);\n\n  useEffect(() => {\n    console.log(playerID);\n  }, [playerID]);\n\n  const handleClick = (e) => {\n    console.log(e);\n  };\n\n  const dialogCallback = (childData) => {\n    console.log(childData);\n  };\n\n  return (\n    <Container>\n      <FormDialog\n        parentCallback={dialogCallback}\n        handleClickOpen={handleClick}\n      />\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Edit</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\">Position</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {count.map((row, i) => (\n              <TableRow key={i}>\n                <TableCell onClick={() => handleClick(row)} align=\"left\">\n                  <EditIcon />\n                </TableCell>\n                <TableCell align=\"left\">{row.name}</TableCell>\n                <TableCell align=\"left\">{row.id}</TableCell>\n                <TableCell align=\"left\">{row.position}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div>\n        <div>Count: {props.count}</div>\n\n        <button onClick={() => props.increaseCounter()}>Increase Count</button>\n\n        <button onClick={() => props.decreaseCounter()}>Decrease Count</button>\n      </div>\n    </Container>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSetupComponent);\n","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/rootReducer.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/formDialog.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.actions.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.reducer.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.types.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/scheduleGrid.js",["81","82","83","84","85","86","87","88","89"],"import { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport './scheduleGrid.scss'\n\nfunction ScheduleGridComponent() {\n  const [players] = useState([\n    { name: 'Alex Ovechkin', id: '8471214' },\n    { name: 'Mika Zibanejad', id: '8476459' },\n    { name: 'Jonathan Huberdeau', id: '8476456' },\n    { name: 'Jake Guentzel', id: '8477404' },\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\n    { name: 'J.T. Miller', id: '8476468' },\n    { name: 'Filip Forsberg', id: '8476887' },\n    { name: 'Brady Tkachuk', id: '8480801' },\n    { name: 'Max Domi', id: '8477503' },\n    { name: 'Chris Kreider', id: '8475184' },\n  ]);\n  const [defensePlayers] = useState([\n    { name: 'Brent Burns', id: '8470613' },\n    { name: 'Ryan Pulock', id: '8477506' },\n    { name: 'Mark Giordano', id: '8470966' },\n    { name: 'Quinn Hughes', id: '8480800' },\n    { name: 'Adam Fox', id: '8479323' },\n    { name: 'Rasmus Ristolainen', id: '8477499' },\n  ]);\n  const [dates] = useState([\n    { day: '10/24/21', type: '' },\n    { day: '10/25/21', type: '' },\n    { day: '10/26/21', type: '' },\n    { day: '10/27/21', type: '' },\n    { day: '10/28/21', type: '' },\n    { day: '10/29/21', type: '' },\n    { day: '10/30/21', type: '' },\n  ]);\n  return (\n    <div className=\"tableContainer\">\n      <div className={\"row\"+' '+\"columnNames\"}>\n        {dates.map((date, i) => (\n          <div key={i} className={\"col-xs\"+\" \"+\"columnName\"}>\n            <div className=\"box\">{date.day}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduleGridComponent;\n","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/utils/firebase.js",["90"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/signInDialog.js",["91","92","93","94","95","96"],{"ruleId":"97","severity":1,"message":"98","line":25,"column":7,"nodeType":"99","messageId":"100","endLine":25,"endColumn":9},{"ruleId":"97","severity":1,"message":"101","line":13,"column":8,"nodeType":"99","messageId":"100","endLine":13,"endColumn":14},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"106","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"107","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"108","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"109","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":24},{"ruleId":"97","severity":1,"message":"110","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":21},{"ruleId":"97","severity":1,"message":"111","line":2,"column":23,"nodeType":"99","messageId":"100","endLine":2,"endColumn":34},{"ruleId":"97","severity":1,"message":"106","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"112","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"107","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"108","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"109","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":24},{"ruleId":"113","severity":1,"message":"114","line":38,"column":28,"nodeType":"115","messageId":"116","endLine":38,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":38,"column":32,"nodeType":"115","messageId":"116","endLine":38,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":40,"column":43,"nodeType":"115","messageId":"116","endLine":40,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":40,"column":47,"nodeType":"115","messageId":"116","endLine":40,"endColumn":48},{"ruleId":"97","severity":1,"message":"117","line":27,"column":7,"nodeType":"99","messageId":"100","endLine":27,"endColumn":16},{"ruleId":"97","severity":1,"message":"118","line":12,"column":3,"nodeType":"99","messageId":"100","endLine":12,"endColumn":23},{"ruleId":"97","severity":1,"message":"119","line":22,"column":10,"nodeType":"99","messageId":"100","endLine":22,"endColumn":27},{"ruleId":"97","severity":1,"message":"120","line":93,"column":15,"nodeType":"99","messageId":"100","endLine":93,"endColumn":24},{"ruleId":"97","severity":1,"message":"121","line":94,"column":15,"nodeType":"99","messageId":"100","endLine":94,"endColumn":27},{"ruleId":"97","severity":1,"message":"122","line":96,"column":15,"nodeType":"99","messageId":"100","endLine":96,"endColumn":20},{"ruleId":"97","severity":1,"message":"123","line":98,"column":15,"nodeType":"99","messageId":"100","endLine":98,"endColumn":25},"no-unused-vars","'db' is assigned a value but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'useEffect' is defined but never used.","'MaterialTable' is defined but never used.","'players' is assigned a value but never used.","'defensePlayers' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Container' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'analytics' is assigned a value but never used.","'signInWithCredential' is defined but never used.","'getByDisplayValue' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]