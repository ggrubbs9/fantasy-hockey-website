[{"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/index.js":"1","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/App.js":"2","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/reportWebVitals.js":"3","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/store.js":"4","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/LineupMachine.js":"5","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerStats.js":"6","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerPickup.js":"7","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/TeamSetup.js":"8","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/rootReducer.js":"9","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/formDialog.js":"10","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.actions.js":"11","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.reducer.js":"12","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.types.js":"13","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/scheduleGrid.js":"14","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/utils/firebase.js":"15","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/signInDialog.js":"16"},{"size":1164,"mtime":1635475931303,"results":"17","hashOfConfig":"18"},{"size":3349,"mtime":1635475998117,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1635472672767,"results":"20","hashOfConfig":"18"},{"size":229,"mtime":1635472672769,"results":"21","hashOfConfig":"18"},{"size":1213,"mtime":1635472672766,"results":"22","hashOfConfig":"18"},{"size":11153,"mtime":1635472672766,"results":"23","hashOfConfig":"18"},{"size":11155,"mtime":1635472672766,"results":"24","hashOfConfig":"18"},{"size":3937,"mtime":1635472672767,"results":"25","hashOfConfig":"18"},{"size":196,"mtime":1635472672769,"results":"26","hashOfConfig":"18"},{"size":1723,"mtime":1635473865041,"results":"27","hashOfConfig":"18"},{"size":216,"mtime":1635472672768,"results":"28","hashOfConfig":"18"},{"size":430,"mtime":1635472672768,"results":"29","hashOfConfig":"18"},{"size":76,"mtime":1635472672768,"results":"30","hashOfConfig":"18"},{"size":1640,"mtime":1635472672764,"results":"31","hashOfConfig":"18"},{"size":1025,"mtime":1635475029876,"results":"32","hashOfConfig":"18"},{"size":3158,"mtime":1635474650427,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rxq89i",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/index.js",["71","72"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/App.js",["73"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/reportWebVitals.js",[],["74","75"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/store.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/LineupMachine.js",["76","77","78","79"],"import { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport ScheduleGridComponent from '../components/scheduleGrid.js';\n\nfunction LineupMachineComponent() {\n  const [players] = useState([\n    { name: 'Alex Ovechkin', id: '8471214' },\n    { name: 'Mika Zibanejad', id: '8476459' },\n    { name: 'Jonathan Huberdeau', id: '8476456' },\n    { name: 'Jake Guentzel', id: '8477404' },\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\n    { name: 'J.T. Miller', id: '8476468' },\n    { name: 'Filip Forsberg', id: '8476887' },\n    { name: 'Brady Tkachuk', id: '8480801' },\n    { name: 'Max Domi', id: '8477503' },\n    { name: 'Chris Kreider', id: '8475184' },\n  ]);\n  const [defensePlayers] = useState([\n    { name: 'Brent Burns', id: '8470613' },\n    { name: 'Ryan Pulock', id: '8477506' },\n    { name: 'Mark Giordano', id: '8470966' },\n    { name: 'Quinn Hughes', id: '8480800' },\n    { name: 'Adam Fox', id: '8479323' },\n    { name: 'Rasmus Ristolainen', id: '8477499' },\n  ]);\n  return (\n    <Container maxWidth=\"xl\">\n      <h1>hi</h1>\n      <ScheduleGridComponent />\n    </Container>\n  );\n}\n\nexport default LineupMachineComponent;\n","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerStats.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/PlayerPickup.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/pages/TeamSetup.js",["80","81"],"import { Container } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {\n  TableBody,\n  TableCell,\n  TableRow,\n  Table,\n  TableContainer,\n  Paper,\n  TableHead,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport FormDialog from '../components/formDialog';\nimport { connect } from 'react-redux';\n\nimport {\n  increaseCounter,\n  decreaseCounter,\n} from '../store/Counter/counter.actions';\n\nconst mapStateToProps = (state) => {\n  return {\n    count: state.counter.count,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increaseCounter: () => dispatch(increaseCounter()),\n\n    decreaseCounter: () => dispatch(decreaseCounter()),\n  };\n};\n\nfunction TeamSetupComponent(props) {\n  const count = [\n    { name: 'Alex Ovechkin', id: '8471214' },\n    { name: 'Mika Zibanejad', id: '8476459' },\n    { name: 'Jonathan Huberdeau', id: '8476456' },\n    { name: 'Jake Guentzel', id: '8477404' },\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\n    { name: 'J.T. Miller', id: '8476468' },\n    { name: 'Filip Forsberg', id: '8476887' },\n    { name: 'Brady Tkachuk', id: '8480801' },\n    { name: 'Max Domi', id: '8477503' },\n    { name: 'Chris Kreider', id: '8475184' },\n\n    { name: 'Brent Burns', id: '8470613' },\n    { name: 'Ryan Pulock', id: '8477506' },\n    { name: 'Mark Giordano', id: '8470966' },\n    { name: 'Quinn Hughes', id: '8480800' },\n    { name: 'Adam Fox', id: '8479323' },\n    { name: 'Rasmus Ristolainen', id: '8477499' },\n  ];\n\n  const [playerID, setPlayerID] = useState([]);\n\n  const searchPlayerID = async (player) => {\n    const promises = [];\n\n    const getData = () => {\n      const res = axios.get(\n        `https://statsapi.web.nhl.com/api/v1/teams?expand=team.roster`\n      );\n      return res;\n    };\n\n    promises.push(getData());\n\n    await Promise.all(promises).then((results) => {\n      const teams = results[0].data.teams;\n\n      teams.forEach((team) => {\n        const roster = team.roster.roster;\n        roster.forEach((rosterPlayer) => {\n          if (rosterPlayer.person.fullName === player) {\n            console.log(rosterPlayer);\n            setPlayerID(rosterPlayer.person.id);\n          }\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n    searchPlayerID('Patrick Kane');\n  }, []);\n\n  useEffect(() => {\n    console.log(playerID);\n  }, [playerID]);\n\n  const handleClick = (e) => {\n    console.log(e);\n  };\n\n  const dialogCallback = (childData) => {\n    console.log(childData);\n  };\n\n  return (\n    <Container>\n      <FormDialog\n        parentCallback={dialogCallback}\n        handleClickOpen={handleClick}\n      />\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Edit</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\">Position</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {count.map((row, i) => (\n              <TableRow key={i}>\n                <TableCell onClick={() => handleClick(row)} align=\"left\">\n                  <EditIcon />\n                </TableCell>\n                <TableCell align=\"left\">{row.name}</TableCell>\n                <TableCell align=\"left\">{row.id}</TableCell>\n                <TableCell align=\"left\">{row.position}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div>\n        <div>Count: {props.count}</div>\n\n        <button onClick={() => props.increaseCounter()}>Increase Count</button>\n\n        <button onClick={() => props.decreaseCounter()}>Decrease Count</button>\n      </div>\n    </Container>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSetupComponent);\n","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/rootReducer.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/formDialog.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.actions.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.reducer.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/store/Counter/counter.types.js",[],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/scheduleGrid.js",["82","83","84","85","86","87","88","89","90"],"import { useEffect, useState } from 'react';\nimport { Container } from '@material-ui/core';\nimport MaterialTable from 'material-table';\nimport './scheduleGrid.scss'\n\nfunction ScheduleGridComponent() {\n  const [players] = useState([\n    { name: 'Alex Ovechkin', id: '8471214' },\n    { name: 'Mika Zibanejad', id: '8476459' },\n    { name: 'Jonathan Huberdeau', id: '8476456' },\n    { name: 'Jake Guentzel', id: '8477404' },\n    { name: 'Ryan Nugent-Hopkins', id: '8476454' },\n    { name: 'J.T. Miller', id: '8476468' },\n    { name: 'Filip Forsberg', id: '8476887' },\n    { name: 'Brady Tkachuk', id: '8480801' },\n    { name: 'Max Domi', id: '8477503' },\n    { name: 'Chris Kreider', id: '8475184' },\n  ]);\n  const [defensePlayers] = useState([\n    { name: 'Brent Burns', id: '8470613' },\n    { name: 'Ryan Pulock', id: '8477506' },\n    { name: 'Mark Giordano', id: '8470966' },\n    { name: 'Quinn Hughes', id: '8480800' },\n    { name: 'Adam Fox', id: '8479323' },\n    { name: 'Rasmus Ristolainen', id: '8477499' },\n  ]);\n  const [dates] = useState([\n    { day: '10/24/21', type: '' },\n    { day: '10/25/21', type: '' },\n    { day: '10/26/21', type: '' },\n    { day: '10/27/21', type: '' },\n    { day: '10/28/21', type: '' },\n    { day: '10/29/21', type: '' },\n    { day: '10/30/21', type: '' },\n  ]);\n  return (\n    <div className=\"tableContainer\">\n      <div className={\"row\"+' '+\"columnNames\"}>\n        {dates.map((date, i) => (\n          <div key={i} className={\"col-xs\"+\" \"+\"columnName\"}>\n            <div className=\"box\">{date.day}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ScheduleGridComponent;\n","/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/utils/firebase.js",["91"],"/Users/graham.grubbs/Desktop/Dow/fantasy-hockey-website/src/components/signInDialog.js",["92","93","94","95","96"],"import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n\nconst provider = new GoogleAuthProvider();\n\nexport default function SignInDialog({ parentCallback, handleClickOpen }) {\n  const [open, setOpen] = React.useState(false);\n  const [name, setName] = React.useState('Cat in the Hat');\n\n  handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    parentCallback(name);\n    setOpen(false);\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const googleSignIn = () => {\n    const auth = getAuth();\n\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        console.log(token)\n        console.log(result)\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n  };\n\n  const googleSignUp = () => {};\n\n  return (\n    <div style={{ margin: 'auto' }}>\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"email\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={name}\n            onChange={handleChange}\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n            value={name}\n            onChange={handleChange}\n          />\n          <Button onClick={googleSignIn}>Sign In With Google</Button>\n          <Button onClick={googleSignUp}>Sign Up</Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleClose}>Subscribe</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n",{"ruleId":"97","severity":1,"message":"98","line":9,"column":10,"nodeType":"99","messageId":"100","endLine":9,"endColumn":22},{"ruleId":"97","severity":1,"message":"101","line":22,"column":7,"nodeType":"99","messageId":"100","endLine":22,"endColumn":10},{"ruleId":"97","severity":1,"message":"102","line":13,"column":8,"nodeType":"99","messageId":"100","endLine":13,"endColumn":14},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"97","severity":1,"message":"107","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"108","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"109","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"110","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":24},{"ruleId":"97","severity":1,"message":"111","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":21},{"ruleId":"97","severity":1,"message":"112","line":2,"column":23,"nodeType":"99","messageId":"100","endLine":2,"endColumn":34},{"ruleId":"97","severity":1,"message":"107","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":19},{"ruleId":"97","severity":1,"message":"113","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},{"ruleId":"97","severity":1,"message":"108","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"97","severity":1,"message":"109","line":7,"column":10,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"110","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":38,"column":28,"nodeType":"116","messageId":"117","endLine":38,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":38,"column":32,"nodeType":"116","messageId":"117","endLine":38,"endColumn":33},{"ruleId":"114","severity":1,"message":"115","line":40,"column":43,"nodeType":"116","messageId":"117","endLine":40,"endColumn":44},{"ruleId":"114","severity":1,"message":"115","line":40,"column":47,"nodeType":"116","messageId":"117","endLine":40,"endColumn":48},{"ruleId":"97","severity":1,"message":"118","line":27,"column":7,"nodeType":"99","messageId":"100","endLine":27,"endColumn":16},{"ruleId":"97","severity":1,"message":"119","line":39,"column":15,"nodeType":"99","messageId":"100","endLine":39,"endColumn":19},{"ruleId":"97","severity":1,"message":"120","line":46,"column":15,"nodeType":"99","messageId":"100","endLine":46,"endColumn":24},{"ruleId":"97","severity":1,"message":"121","line":47,"column":15,"nodeType":"99","messageId":"100","endLine":47,"endColumn":27},{"ruleId":"97","severity":1,"message":"122","line":49,"column":15,"nodeType":"99","messageId":"100","endLine":49,"endColumn":20},{"ruleId":"97","severity":1,"message":"123","line":51,"column":15,"nodeType":"99","messageId":"100","endLine":51,"endColumn":25},"no-unused-vars","'getAnalytics' is defined but never used.","Identifier","unusedVar","'app' is assigned a value but never used.","'Button' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'useEffect' is defined but never used.","'MaterialTable' is defined but never used.","'players' is assigned a value but never used.","'defensePlayers' is assigned a value but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'Container' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'analytics' is assigned a value but never used.","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]